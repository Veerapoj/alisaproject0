name: Build Blockchain

on:
  push:
    branches:
      - main  # Change to your desired branch

jobs:
  terraform_main:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform for main
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform for main
      id: Initialize
      run: terraform init

    - name: Apply Terraform for main
      run:  |
        set +e  # Disable immediate exit on error
        terraform apply -auto-approve
        terraform_exit_code=$?  # Capture the exit code
        if [ $terraform_exit_code -ne 1 ]; then
          echo "Terraform validation succeeded or returned a different exit code ($terraform_exit_code)."
        else
          echo "Terraform validation returned exit code 1. Skipping this step."
          exit 0  # Skip the step by exiting with a success code (0)
        fi

  # terraform_genesis:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Terraform for genesis
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 1.0.0  

  #   - name: Debugging Info
  #     run: terraform validate

  #   - name: Initialize Terraform for genesis
  #     run: terraform init

  #   - name: Apply Terraform for genesis
  #     run: terraform apply -auto-approve

  # terraform_validators:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Terraform for validators
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 1.0.0  

  #   - name: Initialize Terraform for validators
  #     run: terraform init

  #   - name: Apply Terraform for validators
  #     run: terraform apply -auto-approve

  ansible_genesis:
    needs: terraform_main # needs is required for reference and to prevent both jobs running at the same time
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Install dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y software-properties-common
    #     sudo apt-add-repository ppa:ansible/ansible
    #     sudo apt-get update
    #     sudo apt-get install -y ansible
    #     sudo ansible-galaxy collection install community.google
    #     sudo pip install google-auth

    - name: Configure Ansible for genesis
      run: |
        # # Set up Google Cloud JSON authentication file for genesis
        #  echo "${{ env.TF_ACCESS }}" > gcp-auth.json
        #  export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth.json

        # Run Ansible playbook for genesis
        ansible-playbook genesis/ansible-genesis.yaml

  ansible_validators:
    needs: terraform_main # needs is required for reference and to prevent both jobs running at the same time
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      if: ${{ !steps.Apply.outputs.skip }}
      uses: actions/checkout@v2

    # - name: Install dependencies
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y software-properties-common
    #     sudo apt-add-repository ppa:ansible/ansible
    #     sudo apt-get update
    #     sudo apt-get install -y ansible
    #     sudo ansible-galaxy collection install community.google
    #     sudo pip install google-auth

    - name: Configure Ansible for Validators
      run: |
        # Set up Google Cloud JSON authentication file for validator01
        #  echo "${{ env.TF_ACCESS }}" > gcp-auth-validator01.json
        #  export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator01.json

        # Run Ansible playbook for validator01
        ansible-playbook validators/ansible-validators01.yaml

        # Set up Google Cloud JSON authentication file for validator02
        #  echo "${{ env.TF_ACCESS }}" > gcp-auth-validator02.json
        #  export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator02.json

        # Run Ansible playbook for validator02
        ansible-playbook validators/ansible-validators02.yaml

        # Set up Google Cloud JSON authentication file for validator03
        #  echo "${{ env.TF_ACCESS }}" > gcp-auth-validator03.json
        #  export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator03.json

        # Run Ansible playbook for validator03
        ansible-playbook validators/ansible-validators03.yaml

  cleanup:
    runs-on: ubuntu-latest
    needs: [ansible_genesis, ansible_validators]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cleanup Terraform
      run: |
        # Destroy Terraform resources for terraform_main
        terraform destroy -auto-approve
        
        # Destroy Terraform resources for _genesis
        #terraform destroy -auto-approve -chdir=genesis/genesis.tf

        # Destroy Terraform resources for validators
        #terraform destroy -auto-approve -chdir=validators/validator.tf
