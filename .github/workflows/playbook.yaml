name: Build Blockchain

on:
  push:
    branches:
      - main  # Change to your desired branch

jobs:
  terraform_main:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform for genesis
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Check for existing GCP instances
      id: check-instances
      run: |
        existing_instances=$(terraform state list | grep google_compute_instance) || true
        echo "::set-output name=instances_exist::$(if [ -n "$existing_instances" ]; then echo "true"; else echo "false"; fi)"
      continue-on-error: true

    - name: Debugging Info
      run: terraform validate

    - name: Initialize Terraform for genesis
      run: terraform init

    - name: Apply Terraform for genesis
      if: steps.check-instances.outputs.instances_exist != 'true'
      run: terraform apply -auto-approve

  # terraform_genesis:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Terraform for genesis
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 1.0.0  

  #   - name: Debugging Info
  #     run: terraform validate

  #   - name: Initialize Terraform for genesis
  #     run: terraform init

  #   - name: Apply Terraform for genesis
  #     run: terraform apply -auto-approve

  # terraform_validators:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Terraform for validators
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: 1.0.0  

  #   - name: Initialize Terraform for validators
  #     run: terraform init

  #   - name: Apply Terraform for validators
  #     run: terraform apply -auto-approve

  ansible_genesis:
    runs-on: ubuntu-latest
    needs: terraform_main

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo apt-add-repository ppa:ansible/ansible
        sudo apt-get update
        sudo apt-get install -y ansible
        sudo ansible-galaxy collection install community.google
        sudo pip install google-auth

    - name: Configure Ansible for genesis
      run: |
        # # Set up Google Cloud JSON authentication file for genesis
         echo "${{ env.TF_ACCESS }}" > gcp-auth.json
         export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth.json

        # Run Ansible playbook for genesis
        ansible-playbook genesis/ansible-genesis.yml

  ansible_validators:
    runs-on: ubuntu-latest
    needs: terraform_main

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo apt-add-repository ppa:ansible/ansible
        sudo apt-get update
        sudo apt-get install -y ansible
        sudo ansible-galaxy collection install community.google
        sudo pip install google-auth

    - name: Configure Ansible for Validators
      run: |
        # Set up Google Cloud JSON authentication file for validator01
         echo "${{ env.TF_ACCESS }}" > gcp-auth-validator01.json
         export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator01.json

        # Run Ansible playbook for validator01
        ansible-playbook ansible-validators01.yaml

        # Set up Google Cloud JSON authentication file for validator02
         echo "${{ env.TF_ACCESS }}" > gcp-auth-validator02.json
         export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator02.json

        # Run Ansible playbook for validator02
        ansible-playbook ansible-validators02.yaml

        # Set up Google Cloud JSON authentication file for validator03
         echo "${{ env.TF_ACCESS }}" > gcp-auth-validator03.json
         export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-auth-validator03.json

        # Run Ansible playbook for validator03
        ansible-playbook ansible-validators03.yaml

  cleanup:
    runs-on: ubuntu-latest
    needs: [ansible_genesis, ansible_validators]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cleanup Terraform
      run: |
        # Destroy Terraform resources for terraform_main
        terraform destroy -auto-approve
        
        # Destroy Terraform resources for _genesis
        #terraform destroy -auto-approve -chdir=genesis/genesis.tf

        # Destroy Terraform resources for validators
        #terraform destroy -auto-approve -chdir=validators/validator.tf
